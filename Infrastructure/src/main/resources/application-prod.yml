spring:
  application:
    name: restful-api-jwt

  datasource:
    url: jdbc:postgresql://${PSQL_URL}
    driver-class-name: org.postgresql.Driver
    username: ${PSQL_USER}
    password: ${PSQL_PASS}
    hikari:
      schema: public
#      maximum-pool-size: 20
#      minimum-idle: 5
#      idle-timeout: 30000
#      connection-timeout: 20000
#      leak-detection-threshold: 15000

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: smtp.gmail.com
    port: 465
    username: ${MAIL_USER}
    password: ${MAIL_PASS}
    protocol: smtp
    properties:
      mail:
        smtp:
          ssl:
            enable: true
            trust: smtp.gmail.com
            checkserveridentity: true
        debug: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

server:
  port: 8080
  error:
    include-message: never
    include-exception: off
    include-stacktrace: never
  ssl:
    key-store: classpath:cris6h16.p12
    key-store-password: ${KEY_STORE_PASS}
    key-store-type: PKCS12
    key-alias: cris6h16
    enabled: true
  compression:
    enabled: true
    mime-types: application/json
    min-response-size: 2048

logging:
  level:
    root: INFO
  file:
    path: /var/log/restful-api-jwt.log

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  expiration:
    token:
      refresh:
        secs: 1296000 # 15 days
      access:
        secs: 1800 # 30 minutes
        cookie:
          name: accessToken
      request:
        email:
          verification:
            secs: 86400 # 1 day todo: add to docs this change ( initiallly was 5 minutes)
          password:
            reset:
              secs: 1800 # 30 minutes
error:
  messages:
    user:
      unique:
        username: "Username already exists"
        email: "Email already exists"
      invalid:
        email: "Invalid email"
        id:
          null-val: "Id cannot be null"
        username:
          blank: "Username cannot be blank"
        password:
          length:
            tooShort: "Password must be at least 8 characters long"
        roles:
          empty: "A user must have at least one role"

